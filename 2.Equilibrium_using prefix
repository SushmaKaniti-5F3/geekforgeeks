#include <iostream>
using namespace std;
class Solution{
    public:
    // Function to find equilibrium point in the array.
    int equilibriumPoint(long long a[], int n) {
    
        // Your code here
        int prefix[n];
        prefix[0]=a[0];
        for(int i=1;i<n;i++)
        prefix[i]=prefix[i-1]+a[i]; //1 4 9 11 13
        if(n==1)
        return 1;
        else
        {
            for(int i=1;i<n-1;i++)
            {
                int r=prefix[n-1]-prefix[i];          //r=13-4=>9
                if(r==prefix[i+1])                    //r==prefix[i+1] => 9==9
                return i+2;                           //returning position of i+1 i.e; i+2=1+2=>"3"
            }
        }
        return -1;
        
    }

};

int main() {

    long long t;
    
    //taking testcases
    cin >> t;

    while (t--) {
        long long n;
        
        //taking input n
        cin >> n;
        long long a[n];

        //adding elements to the array
        for (long long i = 0; i < n; i++) { 
            cin >> a[i];                            // 1 3 5 2 2 
        }
        
        Solution ob;

        //calling equilibriumPoint() function
        cout << ob.equilibriumPoint(a, n) << endl;
    }
    return 0;
}
